// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/aklinker1/miasma/internal/server/gen/models"
)

// UninstallPluginOKCode is the HTTP code returned for type UninstallPluginOK
const UninstallPluginOKCode int = 200

/*UninstallPluginOK Created

swagger:response uninstallPluginOK
*/
type UninstallPluginOK struct {

	/*
	  In: Body
	*/
	Payload *models.Plugin `json:"body,omitempty"`
}

// NewUninstallPluginOK creates UninstallPluginOK with default headers values
func NewUninstallPluginOK() *UninstallPluginOK {

	return &UninstallPluginOK{}
}

// WithPayload adds the payload to the uninstall plugin o k response
func (o *UninstallPluginOK) WithPayload(payload *models.Plugin) *UninstallPluginOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the uninstall plugin o k response
func (o *UninstallPluginOK) SetPayload(payload *models.Plugin) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UninstallPluginOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*UninstallPluginDefault Unknown Error

swagger:response uninstallPluginDefault
*/
type UninstallPluginDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewUninstallPluginDefault creates UninstallPluginDefault with default headers values
func NewUninstallPluginDefault(code int) *UninstallPluginDefault {
	if code <= 0 {
		code = 500
	}

	return &UninstallPluginDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the uninstall plugin default response
func (o *UninstallPluginDefault) WithStatusCode(code int) *UninstallPluginDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the uninstall plugin default response
func (o *UninstallPluginDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the uninstall plugin default response
func (o *UninstallPluginDefault) WithPayload(payload string) *UninstallPluginDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the uninstall plugin default response
func (o *UninstallPluginDefault) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UninstallPluginDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
