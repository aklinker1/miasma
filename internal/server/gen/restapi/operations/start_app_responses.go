// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// StartAppOKCode is the HTTP code returned for type StartAppOK
const StartAppOKCode int = 200

/*StartAppOK Started

swagger:response startAppOK
*/
type StartAppOK struct {
}

// NewStartAppOK creates StartAppOK with default headers values
func NewStartAppOK() *StartAppOK {

	return &StartAppOK{}
}

// WriteResponse to the client
func (o *StartAppOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// StartAppNotFoundCode is the HTTP code returned for type StartAppNotFound
const StartAppNotFoundCode int = 404

/*StartAppNotFound Not Found

swagger:response startAppNotFound
*/
type StartAppNotFound struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewStartAppNotFound creates StartAppNotFound with default headers values
func NewStartAppNotFound() *StartAppNotFound {

	return &StartAppNotFound{}
}

// WithPayload adds the payload to the start app not found response
func (o *StartAppNotFound) WithPayload(payload string) *StartAppNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the start app not found response
func (o *StartAppNotFound) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *StartAppNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

/*StartAppDefault Unknown Error

swagger:response startAppDefault
*/
type StartAppDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewStartAppDefault creates StartAppDefault with default headers values
func NewStartAppDefault(code int) *StartAppDefault {
	if code <= 0 {
		code = 500
	}

	return &StartAppDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the start app default response
func (o *StartAppDefault) WithStatusCode(code int) *StartAppDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the start app default response
func (o *StartAppDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the start app default response
func (o *StartAppDefault) WithPayload(payload string) *StartAppDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the start app default response
func (o *StartAppDefault) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *StartAppDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
