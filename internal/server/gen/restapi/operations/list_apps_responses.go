// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/aklinker1/miasma/package/models"
)

// ListAppsOKCode is the HTTP code returned for type ListAppsOK
const ListAppsOKCode int = 200

/*ListAppsOK OK

swagger:response listAppsOK
*/
type ListAppsOK struct {

	/*
	  In: Body
	*/
	Payload []*models.AppWithStatus `json:"body,omitempty"`
}

// NewListAppsOK creates ListAppsOK with default headers values
func NewListAppsOK() *ListAppsOK {

	return &ListAppsOK{}
}

// WithPayload adds the payload to the list apps o k response
func (o *ListAppsOK) WithPayload(payload []*models.AppWithStatus) *ListAppsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list apps o k response
func (o *ListAppsOK) SetPayload(payload []*models.AppWithStatus) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListAppsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.AppWithStatus, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

/*ListAppsDefault Unknown Error

swagger:response listAppsDefault
*/
type ListAppsDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewListAppsDefault creates ListAppsDefault with default headers values
func NewListAppsDefault(code int) *ListAppsDefault {
	if code <= 0 {
		code = 500
	}

	return &ListAppsDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the list apps default response
func (o *ListAppsDefault) WithStatusCode(code int) *ListAppsDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the list apps default response
func (o *ListAppsDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the list apps default response
func (o *ListAppsDefault) WithPayload(payload string) *ListAppsDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list apps default response
func (o *ListAppsDefault) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListAppsDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
