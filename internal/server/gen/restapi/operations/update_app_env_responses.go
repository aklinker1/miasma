// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// UpdateAppEnvOKCode is the HTTP code returned for type UpdateAppEnvOK
const UpdateAppEnvOKCode int = 200

/*UpdateAppEnvOK OK

swagger:response updateAppEnvOK
*/
type UpdateAppEnvOK struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewUpdateAppEnvOK creates UpdateAppEnvOK with default headers values
func NewUpdateAppEnvOK() *UpdateAppEnvOK {

	return &UpdateAppEnvOK{}
}

// WithPayload adds the payload to the update app env o k response
func (o *UpdateAppEnvOK) WithPayload(payload interface{}) *UpdateAppEnvOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update app env o k response
func (o *UpdateAppEnvOK) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateAppEnvOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// UpdateAppEnvBadRequestCode is the HTTP code returned for type UpdateAppEnvBadRequest
const UpdateAppEnvBadRequestCode int = 400

/*UpdateAppEnvBadRequest Bad Request

swagger:response updateAppEnvBadRequest
*/
type UpdateAppEnvBadRequest struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewUpdateAppEnvBadRequest creates UpdateAppEnvBadRequest with default headers values
func NewUpdateAppEnvBadRequest() *UpdateAppEnvBadRequest {

	return &UpdateAppEnvBadRequest{}
}

// WithPayload adds the payload to the update app env bad request response
func (o *UpdateAppEnvBadRequest) WithPayload(payload string) *UpdateAppEnvBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update app env bad request response
func (o *UpdateAppEnvBadRequest) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateAppEnvBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// UpdateAppEnvNotFoundCode is the HTTP code returned for type UpdateAppEnvNotFound
const UpdateAppEnvNotFoundCode int = 404

/*UpdateAppEnvNotFound Not Found

swagger:response updateAppEnvNotFound
*/
type UpdateAppEnvNotFound struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewUpdateAppEnvNotFound creates UpdateAppEnvNotFound with default headers values
func NewUpdateAppEnvNotFound() *UpdateAppEnvNotFound {

	return &UpdateAppEnvNotFound{}
}

// WithPayload adds the payload to the update app env not found response
func (o *UpdateAppEnvNotFound) WithPayload(payload string) *UpdateAppEnvNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update app env not found response
func (o *UpdateAppEnvNotFound) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateAppEnvNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

/*UpdateAppEnvDefault Unknown Error

swagger:response updateAppEnvDefault
*/
type UpdateAppEnvDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewUpdateAppEnvDefault creates UpdateAppEnvDefault with default headers values
func NewUpdateAppEnvDefault(code int) *UpdateAppEnvDefault {
	if code <= 0 {
		code = 500
	}

	return &UpdateAppEnvDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the update app env default response
func (o *UpdateAppEnvDefault) WithStatusCode(code int) *UpdateAppEnvDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the update app env default response
func (o *UpdateAppEnvDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the update app env default response
func (o *UpdateAppEnvDefault) WithPayload(payload string) *UpdateAppEnvDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update app env default response
func (o *UpdateAppEnvDefault) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateAppEnvDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
