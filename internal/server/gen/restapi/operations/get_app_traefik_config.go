// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// GetAppTraefikConfigHandlerFunc turns a function with the right signature into a get app traefik config handler
type GetAppTraefikConfigHandlerFunc func(GetAppTraefikConfigParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetAppTraefikConfigHandlerFunc) Handle(params GetAppTraefikConfigParams) middleware.Responder {
	return fn(params)
}

// GetAppTraefikConfigHandler interface for that can handle valid get app traefik config params
type GetAppTraefikConfigHandler interface {
	Handle(GetAppTraefikConfigParams) middleware.Responder
}

// NewGetAppTraefikConfig creates a new http.Handler for the get app traefik config operation
func NewGetAppTraefikConfig(ctx *middleware.Context, handler GetAppTraefikConfigHandler) *GetAppTraefikConfig {
	return &GetAppTraefikConfig{Context: ctx, Handler: handler}
}

/*GetAppTraefikConfig swagger:route GET /api/plugins/traefik/{appName} getAppTraefikConfig

Get an app's routing config

*/
type GetAppTraefikConfig struct {
	Context *middleware.Context
	Handler GetAppTraefikConfigHandler
}

func (o *GetAppTraefikConfig) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetAppTraefikConfigParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
