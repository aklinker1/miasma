// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/aklinker1/miasma/package/models"
)

// UpdateRunConfigOKCode is the HTTP code returned for type UpdateRunConfigOK
const UpdateRunConfigOKCode int = 200

/*UpdateRunConfigOK OK

swagger:response updateRunConfigOK
*/
type UpdateRunConfigOK struct {

	/*
	  In: Body
	*/
	Payload *models.RunConfig `json:"body,omitempty"`
}

// NewUpdateRunConfigOK creates UpdateRunConfigOK with default headers values
func NewUpdateRunConfigOK() *UpdateRunConfigOK {

	return &UpdateRunConfigOK{}
}

// WithPayload adds the payload to the update run config o k response
func (o *UpdateRunConfigOK) WithPayload(payload *models.RunConfig) *UpdateRunConfigOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update run config o k response
func (o *UpdateRunConfigOK) SetPayload(payload *models.RunConfig) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateRunConfigOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateRunConfigBadRequestCode is the HTTP code returned for type UpdateRunConfigBadRequest
const UpdateRunConfigBadRequestCode int = 400

/*UpdateRunConfigBadRequest Bad Request

swagger:response updateRunConfigBadRequest
*/
type UpdateRunConfigBadRequest struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewUpdateRunConfigBadRequest creates UpdateRunConfigBadRequest with default headers values
func NewUpdateRunConfigBadRequest() *UpdateRunConfigBadRequest {

	return &UpdateRunConfigBadRequest{}
}

// WithPayload adds the payload to the update run config bad request response
func (o *UpdateRunConfigBadRequest) WithPayload(payload string) *UpdateRunConfigBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update run config bad request response
func (o *UpdateRunConfigBadRequest) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateRunConfigBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// UpdateRunConfigNotFoundCode is the HTTP code returned for type UpdateRunConfigNotFound
const UpdateRunConfigNotFoundCode int = 404

/*UpdateRunConfigNotFound Not Found

swagger:response updateRunConfigNotFound
*/
type UpdateRunConfigNotFound struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewUpdateRunConfigNotFound creates UpdateRunConfigNotFound with default headers values
func NewUpdateRunConfigNotFound() *UpdateRunConfigNotFound {

	return &UpdateRunConfigNotFound{}
}

// WithPayload adds the payload to the update run config not found response
func (o *UpdateRunConfigNotFound) WithPayload(payload string) *UpdateRunConfigNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update run config not found response
func (o *UpdateRunConfigNotFound) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateRunConfigNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

/*UpdateRunConfigDefault Unknown Error

swagger:response updateRunConfigDefault
*/
type UpdateRunConfigDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewUpdateRunConfigDefault creates UpdateRunConfigDefault with default headers values
func NewUpdateRunConfigDefault(code int) *UpdateRunConfigDefault {
	if code <= 0 {
		code = 500
	}

	return &UpdateRunConfigDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the update run config default response
func (o *UpdateRunConfigDefault) WithStatusCode(code int) *UpdateRunConfigDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the update run config default response
func (o *UpdateRunConfigDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the update run config default response
func (o *UpdateRunConfigDefault) WithPayload(payload string) *UpdateRunConfigDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update run config default response
func (o *UpdateRunConfigDefault) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateRunConfigDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
