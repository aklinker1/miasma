// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/aklinker1/miasma/package/models"
)

// UpdateAppTraefikConfigOKCode is the HTTP code returned for type UpdateAppTraefikConfigOK
const UpdateAppTraefikConfigOKCode int = 200

/*UpdateAppTraefikConfigOK Created

swagger:response updateAppTraefikConfigOK
*/
type UpdateAppTraefikConfigOK struct {

	/*
	  In: Body
	*/
	Payload *models.TraefikPluginConfig `json:"body,omitempty"`
}

// NewUpdateAppTraefikConfigOK creates UpdateAppTraefikConfigOK with default headers values
func NewUpdateAppTraefikConfigOK() *UpdateAppTraefikConfigOK {

	return &UpdateAppTraefikConfigOK{}
}

// WithPayload adds the payload to the update app traefik config o k response
func (o *UpdateAppTraefikConfigOK) WithPayload(payload *models.TraefikPluginConfig) *UpdateAppTraefikConfigOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update app traefik config o k response
func (o *UpdateAppTraefikConfigOK) SetPayload(payload *models.TraefikPluginConfig) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateAppTraefikConfigOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateAppTraefikConfigBadRequestCode is the HTTP code returned for type UpdateAppTraefikConfigBadRequest
const UpdateAppTraefikConfigBadRequestCode int = 400

/*UpdateAppTraefikConfigBadRequest Traefik plugin is not installed

swagger:response updateAppTraefikConfigBadRequest
*/
type UpdateAppTraefikConfigBadRequest struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewUpdateAppTraefikConfigBadRequest creates UpdateAppTraefikConfigBadRequest with default headers values
func NewUpdateAppTraefikConfigBadRequest() *UpdateAppTraefikConfigBadRequest {

	return &UpdateAppTraefikConfigBadRequest{}
}

// WithPayload adds the payload to the update app traefik config bad request response
func (o *UpdateAppTraefikConfigBadRequest) WithPayload(payload string) *UpdateAppTraefikConfigBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update app traefik config bad request response
func (o *UpdateAppTraefikConfigBadRequest) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateAppTraefikConfigBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

/*UpdateAppTraefikConfigDefault Unknown Error

swagger:response updateAppTraefikConfigDefault
*/
type UpdateAppTraefikConfigDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewUpdateAppTraefikConfigDefault creates UpdateAppTraefikConfigDefault with default headers values
func NewUpdateAppTraefikConfigDefault(code int) *UpdateAppTraefikConfigDefault {
	if code <= 0 {
		code = 500
	}

	return &UpdateAppTraefikConfigDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the update app traefik config default response
func (o *UpdateAppTraefikConfigDefault) WithStatusCode(code int) *UpdateAppTraefikConfigDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the update app traefik config default response
func (o *UpdateAppTraefikConfigDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the update app traefik config default response
func (o *UpdateAppTraefikConfigDefault) WithPayload(payload string) *UpdateAppTraefikConfigDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update app traefik config default response
func (o *UpdateAppTraefikConfigDefault) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateAppTraefikConfigDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
