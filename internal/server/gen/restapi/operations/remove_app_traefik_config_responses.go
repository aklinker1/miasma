// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/aklinker1/miasma/package/models"
)

// RemoveAppTraefikConfigOKCode is the HTTP code returned for type RemoveAppTraefikConfigOK
const RemoveAppTraefikConfigOKCode int = 200

/*RemoveAppTraefikConfigOK Created

swagger:response removeAppTraefikConfigOK
*/
type RemoveAppTraefikConfigOK struct {

	/*
	  In: Body
	*/
	Payload *models.TraefikPluginConfig `json:"body,omitempty"`
}

// NewRemoveAppTraefikConfigOK creates RemoveAppTraefikConfigOK with default headers values
func NewRemoveAppTraefikConfigOK() *RemoveAppTraefikConfigOK {

	return &RemoveAppTraefikConfigOK{}
}

// WithPayload adds the payload to the remove app traefik config o k response
func (o *RemoveAppTraefikConfigOK) WithPayload(payload *models.TraefikPluginConfig) *RemoveAppTraefikConfigOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the remove app traefik config o k response
func (o *RemoveAppTraefikConfigOK) SetPayload(payload *models.TraefikPluginConfig) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RemoveAppTraefikConfigOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RemoveAppTraefikConfigBadRequestCode is the HTTP code returned for type RemoveAppTraefikConfigBadRequest
const RemoveAppTraefikConfigBadRequestCode int = 400

/*RemoveAppTraefikConfigBadRequest Traefik plugin is not installed

swagger:response removeAppTraefikConfigBadRequest
*/
type RemoveAppTraefikConfigBadRequest struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewRemoveAppTraefikConfigBadRequest creates RemoveAppTraefikConfigBadRequest with default headers values
func NewRemoveAppTraefikConfigBadRequest() *RemoveAppTraefikConfigBadRequest {

	return &RemoveAppTraefikConfigBadRequest{}
}

// WithPayload adds the payload to the remove app traefik config bad request response
func (o *RemoveAppTraefikConfigBadRequest) WithPayload(payload string) *RemoveAppTraefikConfigBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the remove app traefik config bad request response
func (o *RemoveAppTraefikConfigBadRequest) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RemoveAppTraefikConfigBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

/*RemoveAppTraefikConfigDefault Unknown Error

swagger:response removeAppTraefikConfigDefault
*/
type RemoveAppTraefikConfigDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewRemoveAppTraefikConfigDefault creates RemoveAppTraefikConfigDefault with default headers values
func NewRemoveAppTraefikConfigDefault(code int) *RemoveAppTraefikConfigDefault {
	if code <= 0 {
		code = 500
	}

	return &RemoveAppTraefikConfigDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the remove app traefik config default response
func (o *RemoveAppTraefikConfigDefault) WithStatusCode(code int) *RemoveAppTraefikConfigDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the remove app traefik config default response
func (o *RemoveAppTraefikConfigDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the remove app traefik config default response
func (o *RemoveAppTraefikConfigDefault) WithPayload(payload string) *RemoveAppTraefikConfigDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the remove app traefik config default response
func (o *RemoveAppTraefikConfigDefault) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RemoveAppTraefikConfigDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
