// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/aklinker1/miasma/internal/server/gen/models"
)

// InstallPluginCreatedCode is the HTTP code returned for type InstallPluginCreated
const InstallPluginCreatedCode int = 201

/*InstallPluginCreated Created

swagger:response installPluginCreated
*/
type InstallPluginCreated struct {

	/*
	  In: Body
	*/
	Payload *models.Plugin `json:"body,omitempty"`
}

// NewInstallPluginCreated creates InstallPluginCreated with default headers values
func NewInstallPluginCreated() *InstallPluginCreated {

	return &InstallPluginCreated{}
}

// WithPayload adds the payload to the install plugin created response
func (o *InstallPluginCreated) WithPayload(payload *models.Plugin) *InstallPluginCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the install plugin created response
func (o *InstallPluginCreated) SetPayload(payload *models.Plugin) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *InstallPluginCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*InstallPluginDefault Unknown Error

swagger:response installPluginDefault
*/
type InstallPluginDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewInstallPluginDefault creates InstallPluginDefault with default headers values
func NewInstallPluginDefault(code int) *InstallPluginDefault {
	if code <= 0 {
		code = 500
	}

	return &InstallPluginDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the install plugin default response
func (o *InstallPluginDefault) WithStatusCode(code int) *InstallPluginDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the install plugin default response
func (o *InstallPluginDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the install plugin default response
func (o *InstallPluginDefault) WithPayload(payload string) *InstallPluginDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the install plugin default response
func (o *InstallPluginDefault) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *InstallPluginDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
