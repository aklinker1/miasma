// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// UpdateRunConfigHandlerFunc turns a function with the right signature into a update run config handler
type UpdateRunConfigHandlerFunc func(UpdateRunConfigParams) middleware.Responder

// Handle executing the request and returning a response
func (fn UpdateRunConfigHandlerFunc) Handle(params UpdateRunConfigParams) middleware.Responder {
	return fn(params)
}

// UpdateRunConfigHandler interface for that can handle valid update run config params
type UpdateRunConfigHandler interface {
	Handle(UpdateRunConfigParams) middleware.Responder
}

// NewUpdateRunConfig creates a new http.Handler for the update run config operation
func NewUpdateRunConfig(ctx *middleware.Context, handler UpdateRunConfigHandler) *UpdateRunConfig {
	return &UpdateRunConfig{Context: ctx, Handler: handler}
}

/*UpdateRunConfig swagger:route PUT /api/apps/{appName}/config updateRunConfig

update an app's config

*/
type UpdateRunConfig struct {
	Context *middleware.Context
	Handler UpdateRunConfigHandler
}

func (o *UpdateRunConfig) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewUpdateRunConfigParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
