// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetAppConfigParams creates a new GetAppConfigParams object
// with the default values initialized.
func NewGetAppConfigParams() *GetAppConfigParams {
	var ()
	return &GetAppConfigParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetAppConfigParamsWithTimeout creates a new GetAppConfigParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetAppConfigParamsWithTimeout(timeout time.Duration) *GetAppConfigParams {
	var ()
	return &GetAppConfigParams{

		timeout: timeout,
	}
}

// NewGetAppConfigParamsWithContext creates a new GetAppConfigParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetAppConfigParamsWithContext(ctx context.Context) *GetAppConfigParams {
	var ()
	return &GetAppConfigParams{

		Context: ctx,
	}
}

// NewGetAppConfigParamsWithHTTPClient creates a new GetAppConfigParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetAppConfigParamsWithHTTPClient(client *http.Client) *GetAppConfigParams {
	var ()
	return &GetAppConfigParams{
		HTTPClient: client,
	}
}

/*GetAppConfigParams contains all the parameters to send to the API endpoint
for the get app config operation typically these are written to a http.Request
*/
type GetAppConfigParams struct {

	/*AppName
	  App name from the `-a|--app` flag

	*/
	AppName string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get app config params
func (o *GetAppConfigParams) WithTimeout(timeout time.Duration) *GetAppConfigParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get app config params
func (o *GetAppConfigParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get app config params
func (o *GetAppConfigParams) WithContext(ctx context.Context) *GetAppConfigParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get app config params
func (o *GetAppConfigParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get app config params
func (o *GetAppConfigParams) WithHTTPClient(client *http.Client) *GetAppConfigParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get app config params
func (o *GetAppConfigParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAppName adds the appName to the get app config params
func (o *GetAppConfigParams) WithAppName(appName string) *GetAppConfigParams {
	o.SetAppName(appName)
	return o
}

// SetAppName adds the appName to the get app config params
func (o *GetAppConfigParams) SetAppName(appName string) {
	o.AppName = appName
}

// WriteToRequest writes these params to a swagger request
func (o *GetAppConfigParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param appName
	if err := r.SetPathParam("appName", o.AppName); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
