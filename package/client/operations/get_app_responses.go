// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/aklinker1/miasma/package/models"
)

// GetAppReader is a Reader for the GetApp structure.
type GetAppReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAppReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAppOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetAppNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetAppOK creates a GetAppOK with default headers values
func NewGetAppOK() *GetAppOK {
	return &GetAppOK{}
}

/*GetAppOK handles this case with default header values.

OK
*/
type GetAppOK struct {
	Payload *models.App
}

func (o *GetAppOK) Error() string {
	return fmt.Sprintf("[GET /api/apps/{appName}][%d] getAppOK  %+v", 200, o.Payload)
}

func (o *GetAppOK) GetPayload() *models.App {
	return o.Payload
}

func (o *GetAppOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.App)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAppNotFound creates a GetAppNotFound with default headers values
func NewGetAppNotFound() *GetAppNotFound {
	return &GetAppNotFound{}
}

/*GetAppNotFound handles this case with default header values.

Not Found
*/
type GetAppNotFound struct {
	Payload string
}

func (o *GetAppNotFound) Error() string {
	return fmt.Sprintf("[GET /api/apps/{appName}][%d] getAppNotFound  %+v", 404, o.Payload)
}

func (o *GetAppNotFound) GetPayload() string {
	return o.Payload
}

func (o *GetAppNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
