// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/aklinker1/miasma/package/models"
)

// EditAppReader is a Reader for the EditApp structure.
type EditAppReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *EditAppReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewEditAppOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewEditAppBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewEditAppNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewEditAppDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewEditAppOK creates a EditAppOK with default headers values
func NewEditAppOK() *EditAppOK {
	return &EditAppOK{}
}

/*EditAppOK handles this case with default header values.

OK
*/
type EditAppOK struct {
	Payload *models.App
}

func (o *EditAppOK) Error() string {
	return fmt.Sprintf("[PUT /api/apps/{appName}][%d] editAppOK  %+v", 200, o.Payload)
}

func (o *EditAppOK) GetPayload() *models.App {
	return o.Payload
}

func (o *EditAppOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.App)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEditAppBadRequest creates a EditAppBadRequest with default headers values
func NewEditAppBadRequest() *EditAppBadRequest {
	return &EditAppBadRequest{}
}

/*EditAppBadRequest handles this case with default header values.

BadRequest
*/
type EditAppBadRequest struct {
	Payload string
}

func (o *EditAppBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/apps/{appName}][%d] editAppBadRequest  %+v", 400, o.Payload)
}

func (o *EditAppBadRequest) GetPayload() string {
	return o.Payload
}

func (o *EditAppBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEditAppNotFound creates a EditAppNotFound with default headers values
func NewEditAppNotFound() *EditAppNotFound {
	return &EditAppNotFound{}
}

/*EditAppNotFound handles this case with default header values.

Not Found
*/
type EditAppNotFound struct {
	Payload string
}

func (o *EditAppNotFound) Error() string {
	return fmt.Sprintf("[PUT /api/apps/{appName}][%d] editAppNotFound  %+v", 404, o.Payload)
}

func (o *EditAppNotFound) GetPayload() string {
	return o.Payload
}

func (o *EditAppNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEditAppDefault creates a EditAppDefault with default headers values
func NewEditAppDefault(code int) *EditAppDefault {
	return &EditAppDefault{
		_statusCode: code,
	}
}

/*EditAppDefault handles this case with default header values.

Unknown Error
*/
type EditAppDefault struct {
	_statusCode int

	Payload string
}

// Code gets the status code for the edit app default response
func (o *EditAppDefault) Code() int {
	return o._statusCode
}

func (o *EditAppDefault) Error() string {
	return fmt.Sprintf("[PUT /api/apps/{appName}][%d] editApp default  %+v", o._statusCode, o.Payload)
}

func (o *EditAppDefault) GetPayload() string {
	return o.Payload
}

func (o *EditAppDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
