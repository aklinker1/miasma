// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/aklinker1/miasma/package/models"
)

// GetAppConfigReader is a Reader for the GetAppConfig structure.
type GetAppConfigReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAppConfigReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAppConfigOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetAppConfigNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewGetAppConfigDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetAppConfigOK creates a GetAppConfigOK with default headers values
func NewGetAppConfigOK() *GetAppConfigOK {
	return &GetAppConfigOK{}
}

/*GetAppConfigOK handles this case with default header values.

OK
*/
type GetAppConfigOK struct {
	Payload *models.AppConfig
}

func (o *GetAppConfigOK) Error() string {
	return fmt.Sprintf("[GET /api/apps/{appName}/config][%d] getAppConfigOK  %+v", 200, o.Payload)
}

func (o *GetAppConfigOK) GetPayload() *models.AppConfig {
	return o.Payload
}

func (o *GetAppConfigOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AppConfig)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAppConfigNotFound creates a GetAppConfigNotFound with default headers values
func NewGetAppConfigNotFound() *GetAppConfigNotFound {
	return &GetAppConfigNotFound{}
}

/*GetAppConfigNotFound handles this case with default header values.

Not Found
*/
type GetAppConfigNotFound struct {
	Payload string
}

func (o *GetAppConfigNotFound) Error() string {
	return fmt.Sprintf("[GET /api/apps/{appName}/config][%d] getAppConfigNotFound  %+v", 404, o.Payload)
}

func (o *GetAppConfigNotFound) GetPayload() string {
	return o.Payload
}

func (o *GetAppConfigNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAppConfigDefault creates a GetAppConfigDefault with default headers values
func NewGetAppConfigDefault(code int) *GetAppConfigDefault {
	return &GetAppConfigDefault{
		_statusCode: code,
	}
}

/*GetAppConfigDefault handles this case with default header values.

Unknown Error
*/
type GetAppConfigDefault struct {
	_statusCode int

	Payload string
}

// Code gets the status code for the get app config default response
func (o *GetAppConfigDefault) Code() int {
	return o._statusCode
}

func (o *GetAppConfigDefault) Error() string {
	return fmt.Sprintf("[GET /api/apps/{appName}/config][%d] getAppConfig default  %+v", o._statusCode, o.Payload)
}

func (o *GetAppConfigDefault) GetPayload() string {
	return o.Payload
}

func (o *GetAppConfigDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
