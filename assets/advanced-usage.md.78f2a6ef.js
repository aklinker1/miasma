import{_ as e,o as a,c as t,S as s}from"./chunks/framework.f15d8f8c.js";const p=JSON.parse('{"title":"Advanced Usage","description":"","frontmatter":{},"headers":[],"relativePath":"advanced-usage.md","filePath":"advanced-usage.md"}'),o={name:"advanced-usage.md"},n=s('<h1 id="advanced-usage" tabindex="-1">Advanced Usage <a class="header-anchor" href="#advanced-usage" aria-label="Permalink to &quot;Advanced Usage&quot;">​</a></h1><nav class="table-of-contents"><ul><li><a href="#using-with-docker">Using with docker</a></li></ul></nav><h2 id="using-with-docker" tabindex="-1">Using with <code>docker</code> <a class="header-anchor" href="#using-with-docker" aria-label="Permalink to &quot;Using with `docker`&quot;">​</a></h2><p>Since Miasma is a simple wrapper around Docker Swarm, you can use the <code>docker</code> CLI to manage services as well. When modifying a service created or updated through the CLI (or by any means other than Miasma), Miasma will not overwrite any settings not editable in it&#39;s UI.</p><p>Be careful modifying docker-compose based services, as the next time you spin them up with docker compose, your changes will not be saved.</p>',5),d=[n];function c(i,r,h,l,u,_){return a(),t("div",null,d)}const g=e(o,[["render",c]]);export{p as __pageData,g as default};
