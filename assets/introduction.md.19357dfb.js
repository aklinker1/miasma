import{_ as a,o as e,c as t,S as i}from"./chunks/framework.f15d8f8c.js";const f=JSON.parse('{"title":"Introduction","description":"","frontmatter":{},"headers":[],"relativePath":"introduction.md","filePath":"introduction.md"}'),o={name:"introduction.md"},r=i('<h1 id="introduction" tabindex="-1">Introduction <a class="header-anchor" href="#introduction" aria-label="Permalink to &quot;Introduction&quot;">​</a></h1><h2 id="background" tabindex="-1">Background <a class="header-anchor" href="#background" aria-label="Permalink to &quot;Background&quot;">​</a></h2><p>Miasma is a simple UI wrapping the docker swarm APIs. Miasma was designed as a simple way to manage applications running on a cluster of Raspberry Pis in my closet.</p><p><img src="https://github.com/aklinker1/miasma/raw/main/.github/assets/ui.png" alt="UI"></p><h2 id="features" tabindex="-1">Features <a class="header-anchor" href="#features" aria-label="Permalink to &quot;Features&quot;">​</a></h2><ul><li>Create, manage, and delete services</li><li>Supports all major CPU architectures (<code>arm/v7</code>, <code>arm64</code>, <code>amd64</code>)</li><li>Add multiple devices to form a cluster</li><li>Horizontal scaling</li></ul><h3 id="future-work" tabindex="-1">Future Work <a class="header-anchor" href="#future-work" aria-label="Permalink to &quot;Future Work&quot;">​</a></h3><ul><li>Built-in hostname and path routing via Traefik</li><li>Automatically managed HTTPS certificates</li><li>Watchtower plugin for upgrading services</li></ul><h2 id="not-features" tabindex="-1">Not Features <a class="header-anchor" href="#not-features" aria-label="Permalink to &quot;Not Features&quot;">​</a></h2><p>Miasma does not, and will never, provide complete docker service configuration. See Portainer if this is what you&#39;re looking for. It provides a simple and opinionated way of managing applications.</p><div class="warning custom-block"><p class="custom-block-title">⚠️ Miasma was not designed for an enterprise environment</p><p>If you&#39;re considering using Miasma to manage some kind of production environment in the cloud, try it out locally first. Understand what it can and can&#39;t do before deciding if it&#39;s right for your stack.</p></div>',11),n=[r];function s(c,l,d,u,m,p){return e(),t("div",null,n)}const g=a(o,[["render",s]]);export{f as __pageData,g as default};
