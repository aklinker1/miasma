import{_ as e,o as a,c as t,S as s}from"./chunks/framework.f15d8f8c.js";const b=JSON.parse('{"title":"Contributing","description":"","frontmatter":{"title":"Contributing"},"headers":[],"relativePath":"contributing.md","filePath":"contributing.md"}'),o={name:"contributing.md"},n=s(`<h1 id="contributing" tabindex="-1">Contributing <a class="header-anchor" href="#contributing" aria-label="Permalink to &quot;Contributing&quot;">​</a></h1><a href="https://github.com/aklinker1/miasma/graphs/contributors"><img src="https://contrib.rocks/image?repo=aklinker1/miasma"></a><p>Welcome to the contributor&#39;s guide! Here you&#39;ll find everything you need to know about contributing to Miasma.</p><nav class="table-of-contents"><ul><li><a href="#required-tools">Required Tools</a></li><li><a href="#tech-stack">Tech Stack</a><ul><li><a href="#docker-socket-customization">Docker Socket Customization</a></li></ul></li><li><a href="#documentation-website">Documentation Website</a></li><li><a href="#publish-a-new-release">Publish a New Release</a></li></ul></nav><h2 id="required-tools" tabindex="-1">Required Tools <a class="header-anchor" href="#required-tools" aria-label="Permalink to &quot;Required Tools&quot;">​</a></h2><ul><li><a href="https://nodejs.org/" target="_blank" rel="noreferrer">Node 18 LTS</a></li><li><a href="https://pnpm.io" target="_blank" rel="noreferrer">PNPM</a></li></ul><h2 id="tech-stack" tabindex="-1">Tech Stack <a class="header-anchor" href="#tech-stack" aria-label="Permalink to &quot;Tech Stack&quot;">​</a></h2><p>Miasma uses <a href="https://nuxt.com" target="_blank" rel="noreferrer">Nuxt</a> to create a server-side-rendered web application (SSR).</p><p>The CSS framework is <a href="https://tailwindcss.com/" target="_blank" rel="noreferrer">TailwindCSS</a> + <a href="https://daisyui.com/" target="_blank" rel="noreferrer">DaisyUI</a>.</p><p>The UI uses an API proxy (<code>/api/docker</code>) for communicating with the docker engine.</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># Create a swarm on your development computer</span></span>
<span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">swarm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">init</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># Start Miasma in dev mode</span></span>
<span class="line"><span style="color:#FFCB6B;">pnpm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">dev</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># Build the Nuxt application</span></span>
<span class="line"><span style="color:#FFCB6B;">pnpm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">build</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># Build the docker image that someone would install from docker hub</span></span>
<span class="line"><span style="color:#FFCB6B;">pnpm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">docker:build</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># Run the built docker image</span></span>
<span class="line"><span style="color:#FFCB6B;">pnpm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">docker:run</span></span></code></pre></div><h3 id="docker-socket-customization" tabindex="-1">Docker Socket Customization <a class="header-anchor" href="#docker-socket-customization" aria-label="Permalink to &quot;Docker Socket Customization&quot;">​</a></h3><p>When running <code>pnpm dev</code> or <code>pnpm docker:run</code>, you might run into 500 status code errors when attempting to connect to docker. By default, it tries to connect to <code>/var/run/docker.sock</code>. But the docker socket isn&#39;t always hosted there, like on Windows. To fix this, add a <code>.env</code> file to the project root, and fill out the <code>MIASMA_DOCKER_SOCKET</code> variable.</p><p>For example, if you use Colima on a Macbook, it hosts the docker socket at <code>$HOME/.colima/default/docker.sock</code>. So the <code>.env</code> would look like this:</p><div class="language-txt"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">MIASMA_DOCKER_SOCKET=/Users/&lt;username&gt;/.colima/default/docker.sock</span></span></code></pre></div><h2 id="documentation-website" tabindex="-1">Documentation Website <a class="header-anchor" href="#documentation-website" aria-label="Permalink to &quot;Documentation Website&quot;">​</a></h2><p>The docs are located under <code>docs/</code> directory, and can be ran locally with:</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">pnpm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">docs:dev</span></span></code></pre></div><p>The website is made using <a href="https://v2.vuepress.vuejs.org/" target="_blank" rel="noreferrer">VitePress</a>, and published to <a href="https://pages.github.com/" target="_blank" rel="noreferrer">GitHub pages</a>.</p><h2 id="publish-a-new-release" tabindex="-1">Publish a New Release <a class="header-anchor" href="#publish-a-new-release" aria-label="Permalink to &quot;Publish a New Release&quot;">​</a></h2><blockquote><p>Maintainers only</p></blockquote><p>The project uses conventional commits, so when PRs are merged, make sure to update their titles or commit titles to a conventional commit.</p><p>Then, to preform a release, simply dispatch the <a href="https://github.com/aklinker1/miasma/actions/workflows/publish-docker.yml" target="_blank" rel="noreferrer">&quot;Publish Docker Image&quot;</a> GitHub Action.</p><p>It will bump the version, build the Docker Image, push it to Docker Hub, and create a release with release notes on GitHub.</p>`,24),l=[n];function r(i,c,p,d,u,h){return a(),t("div",null,l)}const k=e(o,[["render",r]]);export{b as __pageData,k as default};
