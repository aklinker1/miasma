---
swagger: '2.0'
info:
  version: 0.0.0
  title: Miasma

consumes:
  - application/json
produces:
  - application/json

paths:
  /api/health:
    get:
      summary: Standard health check endpoint that checks all the service's statuses
      operationId: getHealthCheck
      responses:
        200:
          description: OK
          schema:
            type: object
            $ref: '#/definitions/Health'
  /api/apps:
    get:
      summary: List all the running applications
      operationId: getApps
      parameters:
        - in: query
          name: hidden
          required: false
          type: boolean
          description: Whether or not to show hidden apps
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/App'
        default:
          description: Unknown Error
          schema:
            type: string
    post:
      summary: Create and start a new application
      operationId: createApp
      parameters:
        - in: body
          name: app
          schema:
            $ref: '#/definitions/AppInput'
      responses:
        201:
          description: Created
          schema:
            $ref: '#/definitions/App'
        400:
          description: Bad Request
          schema:
            type: string
        default:
          description: Unknown Error
          schema:
            type: string
  /api/apps/{appName}:
    get:
      summary: Get an application by name
      operationId: getApp
      parameters:
        - $ref: '#/parameters/appName'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/App'
        404:
          description: Not Found
          schema:
            type: string
    delete:
      summary: Stop and delete an application
      operationId: deleteApp
      parameters:
        - $ref: '#/parameters/appName'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/App'
        404:
          description: Not Found
          schema:
            type: string
        default:
          description: Unknown Error
          schema:
            type: string
  /api/apps/{appName}/start:
    post:
      summary: start the application
      operationId: startApp
      parameters:
        - $ref: '#/parameters/appName'
      responses:
        200:
          description: Started
        404:
          description: Not Found
          schema:
            type: string
        default:
          $ref: '#/responses/unknown'
  /api/apps/{appName}/stop:
    post:
      summary: stop the application
      operationId: stopApp
      parameters:
        - $ref: '#/parameters/appName'
      responses:
        200:
          description: Stopped
        404:
          description: Not Found
          schema:
            type: string
        default:
          $ref: '#/responses/unknown'
  /api/apps/{appName}/config:
    get:
      summary: get an application's current config
      operationId: getAppConfig
      parameters:
        - $ref: '#/parameters/appName'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/AppConfig'
        404:
          description: Not Found
          schema:
            type: string
        default:
          description: Unknown Error
          schema:
            type: string
    put:
      summary: update an application's config
      operationId: updateAppConfig
      parameters:
        - $ref: '#/parameters/appName'
        - in: body
          name: newAppConfig
          schema:
            $ref: '#/definitions/AppConfig'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/AppConfig'
        404:
          description: Not Found
          schema:
            type: string
        default:
          description: Unknown Error
          schema:
            type: string

parameters:
  appName:
    name: appName
    in: path
    required: true
    type: string
    description: App name from the `-a|--app` flag
responses:
  unknown:
    description: Unknown Error
    schema:
      type: string

definitions:
  Health:
    type: object
    properties:
      version:
        type: string
        description: Miasma's current version
      dockerVersion:
        type: string
        description: The version of docker running on the host, or null if docker is not running
      swarm:
        type: object
        description: 
          The info about the docker swarm if the host running miasma is apart of
          one. If it is not apart of a swarm, it returns `null`
        properties:
          id:
            type: string
            description: The swarm's ID
          joinCommand:
            type: string
            description: The command for a node to run to join the swarm
          createdAt:
            type: string
            description: UTC timestamps when the swarm was created
          updatedAt:
            type: string
            description: UTC timestamps when the swarm was last updated
    required:
      - version
      - dockerVersion
      - swarm
  App:
    type: object
    properties:
      name:
        type: string
        description: The apps name, used in the CLI with the `-a|--app` flag
      image:
        type: string
        description: The image the app is based off of
      hidden:
        type: boolean
        description: Whether or not the app is hidden during regular requests
      running:
        type: boolean
    required:
      - name
      - image
      - running
  AppInput:
    type: object
    properties:
      name:
        type: string
        description: The apps name, used in the CLI with the `-a|--app` flag
      image:
        type: string
        description: The image the app is based off of
      hidden:
        type: boolean
        description: Whether or not the app is hidden during regular requests
    required:
      - name
      - image
  AppConfig:
    type: object
    properties:
      targetPorts:
        description: 
          The ports that the application is listening to inside the container. If this list is
          empty, then the container should respect the `PORT` env var. Miasma manages the published
          ports for each port listed here. 
        type: array
        items:
          type: integer
        uniqueItems: true
    required:
      - targetPorts
