# Setup base images
FROM alpine as base-image
RUN mkdir -p /data/miasma
WORKDIR /app

FROM golang:1.14-alpine as backend-builder-base
RUN apk add --update git jq build-base
RUN mkdir /build
WORKDIR /build


# Build the server
FROM backend-builder-base as backend-builder
ARG VERSION
ARG BUILD
ARG BUILD_HASH
ARG BUILD_DATE
ARG BUILD_VAR_PATH
COPY go.mod go.sum ./
RUN go mod download
RUN go install github.com/mattn/go-sqlite3
COPY cmd/server ./cmd/server
COPY internal/shared ./internal/shared
COPY internal/server ./internal/server
COPY package/models ./package/models
RUN go build \
    -ldflags "-X $BUILD_VAR_PATH.VERSION=$VERSION -X $BUILD_VAR_PATH.BUILD=$BUILD -X $BUILD_VAR_PATH.BUILD_HASH=$BUILD_HASH -X $BUILD_VAR_PATH.BUILD_DATE=$BUILD_DATE" \
    -o bin/server \
    cmd/server/main.go


# Make the final image with just the docker cli, the server's go binary, and dashboard UI
FROM base-image
ENV DOCKER_HOST="unix:///var/run/docker.sock"
COPY --from=backend-builder /build/bin/server .
RUN mkdir -p web/dist && echo "<html></html>" > web/dist/index.html
ENTRYPOINT [ "./server", "--port", "3001" ]
